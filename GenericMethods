/*
Modify your last program and try to make it work for any number type, not just integer (e.g. decimal, float, byte, etc.). 
Use generic method (read in Internet about generic methods in C#).
*/
using System;
using System.Collections.Generic;

class GenericMethods
{
    private static T Min<T>(params T[] array)
    {
        dynamic min = array[0];
        for (int i = 0; i < array.Length; i++)
        {
            if (array[i] < min)
            {
                min = array[i];
            }
        }
        return min;
    }
    private static T Max<T>(params T[] array)
    {
        dynamic max = array[0];
        for (int i = 0; i < array.Length; i++)
        {
            if (array[i] > max)
            {
                max = array[i];
            }
        }
        return max;
    }
    private static T Average<T>(params T[] array)
    {
        dynamic sum = 0;
        for (int i = 0; i < array.Length; i++)
        {
            sum = sum + array[i];
        }
        return (sum / array.Length);
    }
    private static T Sum<T>(params T[] array)
    {
        dynamic sum = 0;
        for (int i = 0; i < array.Length; i++)
        {
            sum = sum + array[i];
        }
        return sum;
    }
    private static T Product<T>(params T[] array)
    {
        dynamic product = 1;
        for (int i = 0; i < array.Length; i++)
        {
            product = product * array[i];
        }
        return product;
    }
    static void Main()
    {
        Console.WriteLine("Min={0}", Min(10, 6, 3, 8,-10,143443,-2133));
        Console.WriteLine("Max={0}", Max(10, 6, 3, 8, -10, 143443, -2133));
        Console.WriteLine("Avg={0}", Average(10, 6, 3, 8, -10, 143443, -2133));
        Console.WriteLine("Sum={0}", Sum(10, 6, 3, 8, -10, 143443, -2133));
        Console.WriteLine("Product={0}", Product(10, 6, 3, 8, -10, 143443, -2133));
    }
}
